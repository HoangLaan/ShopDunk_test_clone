const Transform = require('../../common/helpers/transform.helper');

const template = {
    invoice_id: '{{#? INVOICEID }}',
    invoice_no: '{{#? INVOICENO }}',
    invoice_form_no: '{{#? INVOICEFORMNO}}',
    invoice_serial: '{{#? INVOICESERIAL}}',
    invoice_note: '{{#? INVOICENOTE}}',
    invoice_date: '{{#? INVOICEDATE}}',
    invoice_transaction: '{{#? INVOICETRANSACTION}}',
    invoice_url: '{{#? INVOICEURL}}',
    payment_status: '{{PAYMENTSTATUS ? PAYMENTSTATUS : 0 }}',
    cost_price: '{{#? COSTPRICE}}',
    vat_money: '{{#? VATMONEY }}',
    total_price: '{{#? TOTALPRICE}}',
    discount_price: '{{#? DISCOUNTPRICE}}',
    total_discount_price: '{{#? TOTALDISCOUNTPRICE}}',
    is_active: '{{ISACTIVE ? 1 : 0}}',
    created_user: '{{#? CREATEDUSER}}',
    created_date: '{{#? CREATEDDATE}}',
    payment_expire_date: '{{#? PAYMENTEXPIREDATE}}',
    purchase_order_list: '{{#? PURCHASEORDERLIST}}',
    sum_into_money: '{{ SUMINTOMONEY ? SUMINTOMONEY : 0}}',
    sum_vat_price: '{{ SUMVATPRICE ? SUMVATPRICE : 0}}',
    sum_purchase_cost: '{{SUMPURCHASECOST ? SUMPURCHASECOST : 0}}',
    sum_payment_price: '{{ SUMPAYMENTPRICE ? SUMPAYMENTPRICE : 0}}',
    sum_total_price: '{{ SUMTOTALPRICE ? SUMTOTALPRICE : 0}}',
    sum_discount_price: '{{SUMDISCOUNTPRICE ? SUMDISCOUNTPRICE : 0}}',
    sum_total_after_discount: '{{ SUMTOTALAFTERDISCOUNT ? SUMTOTALAFTERDISCOUNT : 0}}',
    sum_final_payment_price: '{{ SUMFINALPAYMENTPRICE ? SUMFINALPAYMENTPRICE : 0}}',
    supplier_id: '{{#? SUPPLIERID }}',
    supplier_code: '{{#? SUPPLIERCODE }}',
    tax_code: '{{#? TAXCODE }}',
    supplier_name: '{{#? SUPPLIERNAME }}',
    paid_time: '{{#? PAIDTIME }}',
    business_name: '{{#? BUSINESSNAME }}',
    business_id: '{{#? BUSINESSID }}',
    address_full: '{{#? ADDRESSFULL }}',
    company_id: '{{#? COMPANYID }}',
    company_name: '{{#? COMPANYNAME }}',
    paid_price: '{{#? PAIDMONEY }}',
    invoice_payments: '{{#? INVOICEPAYMENTS }}',
    invoice_status: '{{ INVOICESTATUS ? 1 : 0 }}',
    is_invoice_purchase: '{{ ISINVOICEPURCHASE ? 1 : 0 }}',
};

let transform = new Transform(template);

const detail = (obj) => {
    return transform.transform(obj, [
        'invoice_id',
        'invoice_no',
        'invoice_form_no',
        'invoice_serial',
        'invoice_note',
        'invoice_date',
        'invoice_transaction',
        'invoice_url',
        'payment_status',
        'cost_price',
        'vat_money',
        'total_price',
        'discount_price',
        'total_discount_price',
        'business_name',
        'business_id',
        'payment_price',
        'is_active',
        'created_user',
        'created_date',
        'payment_expire_date',
        'sum_into_money',
        'sum_vat_price',
        'sum_purchase_cost',
        'sum_payment_price',
        'sum_total_price',
        'sum_discount_price',
        'sum_total_after_discount',
        'sum_final_payment_price',
        'supplier_id',
        'supplier_code',
        'tax_code',
        'supplier_name',
        'address_full',
        'company_id',
        'company_name',
        'invoice_status',
        'is_invoice_purchase',
    ]);
};

const list = (list = []) => {
    return transform.transform(list, [
        'invoice_id',
        'invoice_no',
        'invoice_form_no',
        'invoice_serial',
        'invoice_note',
        'invoice_date',
        'invoice_transaction',
        'payment_expire_date',
        'paid_time',
        'business_name',
        'invoice_url',
        'payment_status',
        'cost_price',
        'vat_money',
        'total_price',
        'discount_price',
        'total_discount_price',
        'payment_price',
        'paid_price',
        'is_active',
        'created_user',
        'created_date',
        'sum_final_payment_price',
        'purchase_order_list',
        'invoice_status',
        'invoice_payments',
    ]);
};

const productList = (data = []) => {
    const template = {
        invoice_detail_id: '{{#? INVOICEDETAILID }}',
        invoice_id: '{{#? INVOICEID }}',
        product_id: '{{#? PRODUCTID }}',
        debt_account_id: '{{#? DEBTACCID }}',
        stocks_account_id: '{{#? STOCKSACCID }}',
        tax_account_id: '{{#? TAXACCID }}',
        product_price: '{{ PRODUCTPRICE ? PRODUCTPRICE : 0 }}',
        vat_value: '{{ VATVALUE ? VATVALUE : 0 }}',
        product_quantity: '{{ QUANTITY ? QUANTITY : 0 }}',
        into_money: '{{ INTOMONEY ? INTOMONEY : 0 }}',
        discount_percent: '{{ DISCOUNTPERCENT ? DISCOUNTPERCENT : 0 }}',
        purchase_cost: '{{ PURCHASECOST ? PURCHASECOST : 0 }}',
        vat_price: '{{ VATPRICE ? VATPRICE : 0 }}',
        payment_price: '{{ PAYMENTPRICE ? PAYMENTPRICE : 0 }}',
        discount_price: '{{ DISCOUNTPRICE ? DISCOUNTPRICE : 0 }}',
        total_after_discount: '{{ TOTALAFTERDISCOUNT ? TOTALAFTERDISCOUNT : 0 }}',
        final_payment_price: '{{ FINALPAYMENTPRICE ? FINALPAYMENTPRICE : 0 }}',
        purchase_order_detail_id: '{{#? PURCHASEORDERDETAILID }}',
        product_name: '{{#? PRODUCTNAME }}',
        product_code: '{{#? PRODUCTCODE }}',
        product_unit: '{{#? UNITNAME }}',
        purchase_order_code: '{{#? PURCHASEORDERCODE }}',
        purchase_order_id: '{{#? PURCHASEORDERID }}',
        stocks_in_request_list: '{{#? STOCKSINREQUESTLIST }}',
        created_date: '{{#? CREATEDDATE }}',
        total_quantity: '{{ TOTALQUANTITY ? TOTALQUANTITY * 1 : 0  }}',
        accounting_id: '{{#? ACCOUNTINGID }}',
    };
    let transform = new Transform(template);
    return transform.transform(data, Object.keys(template));
};

const paymentList = (data = []) => {
    const template = {
        invoice_payment_id: '{{#? INVOICEPAYMENTID }}',
        invoice_id: '{{#? INVOICEID }}',
        purchase_order_id: '{{#? PURCHASEORDERID }}',
        purchase_order_code: '{{#? PURCHASEORDERCODE }}',
        payment_slip_code: '{{#? PAYMENTSLIPCODE }}',
        payment_slip_id: '{{#? PAYMENTSLIPID }}',
        created_user: '{{#? CREATEDUSER }}',
        status: '{{ STATUS }}',
        payment_value: '{{ PAYMENTVALUE ? PAYMENTVALUE : 0 }}',
        is_bookkeeping: '{{#? ISBOOKKEEPING }}',
        is_review: '{{#? ISREVIEW }}',
        payment_type: '{{#? PAYMENTTYPE }}',
    };
    let transform = new Transform(template);
    return transform.transform(data, Object.keys(template));
};

module.exports = {
    detail,
    list,
    productList,
    paymentList,
};
